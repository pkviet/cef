From a804f378e32b74f936dc0c2d53a2bc4e204c4376 Mon Sep 17 00:00:00 2001
From: pkv <pkv@obsproject.com>
Date: Sun, 11 Dec 2022 13:05:23 +0100
Subject: [PATCH] Revert Cleanup viz/gpu dependencies

Reverted e30835a28953c91cca56ea66282901dbfc06a2ea (june 9) to allow
shared textures patch to work.
---
 android_webview/browser/gfx/BUILD.gn          |   1 +
 android_webview/lib/BUILD.gn                  |   1 +
 android_webview/lib/aw_main_delegate.cc       |   1 +
 components/viz/README.md                      |  13 ++
 components/viz/service/BUILD.gn               | 166 ++++++++++++------
 components/viz/service/display/DEPS           |   2 +-
 components/viz/service/display/display.cc     |   2 +
 .../viz/service/display/output_surface.cc     |   2 +
 .../viz/service/display/renderer_pixeltest.cc |   3 +
 .../viz/service/display/skia_renderer.cc      |   1 +
 components/viz/service/display_embedder/DEPS  |   4 +-
 components/viz/service/gl/gpu_service_impl.cc |   1 +
 .../main/viz_compositor_thread_runner_impl.cc |   1 +
 content/browser/BUILD.gn                      |   1 +
 .../gpu/browser_gpu_channel_host_factory.cc   |   1 +
 content/browser/gpu/gpu_process_host.cc       |   2 +
 gpu/ipc/BUILD.gn                              |   6 +
 17 files changed, 147 insertions(+), 61 deletions(-)

diff --git android_webview/browser/gfx/BUILD.gn android_webview/browser/gfx/BUILD.gn
index 77e4639b35d0c..33a414b21a5b5 100644
--- android_webview/browser/gfx/BUILD.gn
+++ android_webview/browser/gfx/BUILD.gn
@@ -81,6 +81,7 @@ source_set("gfx") {
     "//content/public/browser",
     "//gpu/command_buffer/client:gles2_implementation",
     "//gpu/command_buffer/service",
+    "//gpu/ipc:gl_in_process_context",
     "//gpu/ipc/common:android_image_reader_utils",
     "//gpu/ipc/common:common",
     "//gpu/skia_bindings",
diff --git android_webview/lib/BUILD.gn android_webview/lib/BUILD.gn
index 074040d52f226..e77bf4a737120 100644
--- android_webview/lib/BUILD.gn
+++ android_webview/lib/BUILD.gn
@@ -45,6 +45,7 @@ source_set("lib") {
     "//gin",
     "//gpu/command_buffer/service",
     "//gpu/config",
+    "//gpu/ipc:gl_in_process_context",
     "//media",
     "//media:media_buildflags",
     "//third_party/blink/public/common:headers",
diff --git android_webview/lib/aw_main_delegate.cc android_webview/lib/aw_main_delegate.cc
index 7de11d39c881f..19a141a7a2caf 100644
--- android_webview/lib/aw_main_delegate.cc
+++ android_webview/lib/aw_main_delegate.cc
@@ -63,6 +63,7 @@
 #include "gin/v8_initializer.h"
 #include "gpu/command_buffer/service/gpu_switches.h"
 #include "gpu/config/gpu_finch_features.h"
+#include "gpu/ipc/gl_in_process_context.h"
 #include "media/base/media_switches.h"
 #include "media/media_buildflags.h"
 #include "net/base/features.h"
diff --git components/viz/README.md components/viz/README.md
index c140c25a74c87..219218795a2f9 100644
--- components/viz/README.md
+++ components/viz/README.md
@@ -131,6 +131,13 @@ Code here supports presentation of the backing store drawn by the display
 compositor (typically thought of as SwapBuffers), as well as the use of
 overlays.
 
+The source code is split into two build targets,
+``components/viz/service:service`` and
+``components/viz/service:gpu_service_dependencies``. The latter is
+code that requires being run in the gpu process, thus could not work
+if the viz service is located elsewhere. This is forward-looking code
+as the viz service is moving into the gpu process always.
+
 | Can depend on:                        |
 |:--------------------------------------|
 | viz/common/*                          |
@@ -180,6 +187,12 @@ method.
 deallocating) gpu memory buffers, setting up a channel for the command buffer,
 etc.
 
+Similar to ``service/display_embedder`` this is split into two targets in
+the build system. Code that must run in the gpu process is compiled in
+the ``components/viz/service:gpu_service_dependencies`` build target,
+and the rest is compiled in ``components/viz/service:service``. As all
+code moves to the gpu process, these two build targets will merge.
+
 | Can depend on:        |
 |:----------------------|
 | viz/common/*          |
diff --git components/viz/service/BUILD.gn components/viz/service/BUILD.gn
index 39c3b28b4adb7..a7e4677d9a1c7 100644
--- components/viz/service/BUILD.gn
+++ components/viz/service/BUILD.gn
@@ -41,8 +41,6 @@ viz_component("service") {
     "display/display.cc",
     "display/display.h",
     "display/display_client.h",
-    "display/display_compositor_memory_and_task_controller.cc",
-    "display/display_compositor_memory_and_task_controller.h",
     "display/display_damage_tracker.cc",
     "display/display_damage_tracker.h",
     "display/display_resource_provider.cc",
@@ -105,38 +103,13 @@ viz_component("service") {
     "display_embedder/buffer_queue.h",
     "display_embedder/compositor_gpu_thread.cc",
     "display_embedder/compositor_gpu_thread.h",
-    "display_embedder/image_context_impl.cc",
-    "display_embedder/image_context_impl.h",
     "display_embedder/in_process_gpu_memory_buffer_manager.cc",
     "display_embedder/in_process_gpu_memory_buffer_manager.h",
-    "display_embedder/output_presenter.cc",
-    "display_embedder/output_presenter.h",
-    "display_embedder/output_presenter_gl.cc",
-    "display_embedder/output_presenter_gl.h",
     "display_embedder/output_surface_provider.h",
     "display_embedder/output_surface_provider_impl.cc",
     "display_embedder/output_surface_provider_impl.h",
     "display_embedder/server_shared_bitmap_manager.cc",
     "display_embedder/server_shared_bitmap_manager.h",
-    "display_embedder/skia_output_device.cc",
-    "display_embedder/skia_output_device.h",
-    "display_embedder/skia_output_device_buffer_queue.cc",
-    "display_embedder/skia_output_device_buffer_queue.h",
-    "display_embedder/skia_output_device_gl.cc",
-    "display_embedder/skia_output_device_gl.h",
-    "display_embedder/skia_output_device_offscreen.cc",
-    "display_embedder/skia_output_device_offscreen.h",
-    "display_embedder/skia_output_device_webview.cc",
-    "display_embedder/skia_output_device_webview.h",
-    "display_embedder/skia_output_surface_dependency.h",
-    "display_embedder/skia_output_surface_dependency_impl.cc",
-    "display_embedder/skia_output_surface_dependency_impl.h",
-    "display_embedder/skia_output_surface_impl.cc",
-    "display_embedder/skia_output_surface_impl.h",
-    "display_embedder/skia_output_surface_impl_on_gpu.cc",
-    "display_embedder/skia_output_surface_impl_on_gpu.h",
-    "display_embedder/skia_render_copy_results.cc",
-    "display_embedder/skia_render_copy_results.h",
     "display_embedder/software_output_surface.cc",
     "display_embedder/software_output_surface.h",
     "display_embedder/vsync_parameter_listener.cc",
@@ -180,8 +153,6 @@ viz_component("service") {
     "frame_sinks/video_capture/video_frame_pool.h",
     "frame_sinks/video_detector.cc",
     "frame_sinks/video_detector.h",
-    "gl/gpu_service_impl.cc",
-    "gl/gpu_service_impl.h",
     "hit_test/hit_test_aggregator.cc",
     "hit_test/hit_test_aggregator.h",
     "hit_test/hit_test_aggregator_delegate.h",
@@ -224,6 +195,8 @@ viz_component("service") {
 
   defines = [ "VIZ_SERVICE_IMPLEMENTATION" ]
 
+  allow_circular_includes_from = [ ":gpu_service_dependencies" ]
+
   deps = [
     "//build:chromecast_buildflags",
     "//build:chromeos_buildflags",
@@ -231,12 +204,13 @@ viz_component("service") {
     "//cc/paint",
     "//components/crash/core/common:crash_key",
     "//components/power_scheduler",
+    "//gpu/command_buffer/client:gles2_cmd_helper",
+    "//gpu/command_buffer/client:gles2_implementation",
+    "//gpu/command_buffer/client:raster",
 
     # Note that dependency on //gpu/ipc/client is for GpuMemoryBufferImpl. This
     # dependency should not be in public_deps.
     "//components/viz/common",
-    "//gpu/command_buffer/client",
-    "//gpu/config",
     "//gpu/ipc/client",
     "//gpu/ipc/common:common",
     "//gpu/ipc/common:surface_handle_type",
@@ -256,20 +230,14 @@ viz_component("service") {
   ]
 
   public_deps = [
+    ":gpu_service_dependencies",
     "//base",
     "//cc",
     "//cc/debug",
     "//components/viz/common",
-    "//gpu/command_buffer/service:gles2",
-    "//gpu/ipc:gl_in_process_context",
-    "//gpu/ipc/service",
-    "//gpu/vulkan:buildflags",
-    "//media/gpu/ipc/service",
-    "//media/mojo/services",
+    "//gpu/command_buffer/client:gles2_interface",
     "//services/viz/privileged/mojom/compositing",
-    "//services/viz/privileged/mojom/gl",
     "//services/viz/public/mojom",
-    "//skia",
     "//ui/base/prediction",
     "//ui/gfx",
     "//ui/gfx/geometry",
@@ -277,18 +245,6 @@ viz_component("service") {
   ]
 
   if (is_chromeos_ash) {
-    sources += [
-      "display_embedder/output_surface_unified.cc",
-      "display_embedder/output_surface_unified.h",
-    ]
-
-    deps += [
-      "//components/chromeos_camera:jpeg_encode_accelerator_service",
-      "//components/chromeos_camera:mjpeg_decode_accelerator_service",
-      "//gpu/command_buffer/service:gles2",
-      "//media/mojo/services",
-    ]
-
     if (use_v4l2_codec || use_vaapi) {
       deps += [ "//ash/components/arc/video_accelerator" ]
     }
@@ -374,6 +330,85 @@ viz_component("service") {
       "display_embedder/output_device_backing.h",
       "display_embedder/software_output_device_win.cc",
       "display_embedder/software_output_device_win.h",
+    ]
+  }
+
+  if (is_chromeos_ash) {
+    sources += [
+      "display_embedder/output_surface_unified.cc",
+      "display_embedder/output_surface_unified.h",
+    ]
+  }
+
+  if (enable_vulkan) {
+    deps += [ "//gpu/vulkan" ]
+  }
+}
+
+# The gpu_service_dependencies source set contains source files that
+# use the service side GL library (ui/gl), while the rest of
+# viz/service use the client side GL library. This split is needed
+# because the two GL libraries are incompatible and can't compile
+# together in jumbo builds.
+#
+# Long term all service code is moving to be in the gpu process and
+# then this build target will no longer be needed.
+viz_source_set("gpu_service_dependencies") {
+  sources = [
+    "display/display_compositor_memory_and_task_controller.cc",
+    "display/display_compositor_memory_and_task_controller.h",
+    "display_embedder/image_context_impl.cc",
+    "display_embedder/image_context_impl.h",
+    "display_embedder/output_presenter.cc",
+    "display_embedder/output_presenter.h",
+    "display_embedder/output_presenter_gl.cc",
+    "display_embedder/output_presenter_gl.h",
+    "display_embedder/skia_output_device.cc",
+    "display_embedder/skia_output_device.h",
+    "display_embedder/skia_output_device_buffer_queue.cc",
+    "display_embedder/skia_output_device_buffer_queue.h",
+    "display_embedder/skia_output_device_gl.cc",
+    "display_embedder/skia_output_device_gl.h",
+    "display_embedder/skia_output_device_offscreen.cc",
+    "display_embedder/skia_output_device_offscreen.h",
+    "display_embedder/skia_output_device_webview.cc",
+    "display_embedder/skia_output_device_webview.h",
+    "display_embedder/skia_output_surface_dependency.h",
+    "display_embedder/skia_output_surface_dependency_impl.cc",
+    "display_embedder/skia_output_surface_dependency_impl.h",
+    "display_embedder/skia_output_surface_impl.cc",
+    "display_embedder/skia_output_surface_impl.h",
+    "display_embedder/skia_output_surface_impl_on_gpu.cc",
+    "display_embedder/skia_output_surface_impl_on_gpu.h",
+    "display_embedder/skia_render_copy_results.cc",
+    "display_embedder/skia_render_copy_results.h",
+    "gl/gpu_service_impl.cc",
+    "gl/gpu_service_impl.h",
+  ]
+
+  public_deps = [
+    "//gpu/command_buffer/service:gles2",
+    "//gpu/ipc:gl_in_process_context",
+    "//gpu/ipc/service",
+    "//gpu/vulkan:buildflags",
+    "//media/gpu/ipc/service",
+    "//media/mojo/services",
+    "//services/viz/privileged/mojom/gl",
+    "//skia",
+    "//ui/latency:latency",
+  ]
+
+  defines = [ "VIZ_SERVICE_IMPLEMENTATION" ]
+
+  deps = [
+    "//base",
+    "//build:chromeos_buildflags",
+    "//gpu/config",
+    "//third_party/libyuv",
+  ]
+
+  if (is_win) {
+    sources += [
       "gl/info_collection_gpu_service_impl.cc",
       "gl/info_collection_gpu_service_impl.h",
     ]
@@ -389,25 +424,34 @@ viz_component("service") {
     ]
   }
 
-  if (is_fuchsia) {
-    sources += [
-      "display_embedder/output_presenter_fuchsia.cc",
-      "display_embedder/output_presenter_fuchsia.h",
+  if (is_chromeos_ash) {
+    deps += [
+      "//components/chromeos_camera:jpeg_encode_accelerator_service",
+      "//components/chromeos_camera:mjpeg_decode_accelerator_service",
+      "//gpu/command_buffer/service:gles2",
+      "//media/mojo/services",
     ]
+    if (use_v4l2_codec || use_vaapi) {
+      deps += [ "//ash/components/arc/video_accelerator" ]
+    }
   }
 
   if (use_vaapi) {
     deps += [ "//media/gpu/vaapi" ]
   }
 
-  if (enable_vulkan) {
-    deps += [ "//gpu/vulkan" ]
+  if (use_ozone) {
+    deps += [ "//ui/ozone" ]
+  }
 
+  if (enable_vulkan) {
     sources += [
       "display_embedder/skia_output_device_vulkan.cc",
       "display_embedder/skia_output_device_vulkan.h",
     ]
 
+    public_deps += [ "//gpu/vulkan" ]
+
     if (is_android) {
       sources += [
         "display_embedder/skia_output_device_vulkan_secondary_cb.cc",
@@ -447,6 +491,13 @@ viz_component("service") {
       "//third_party/dawn/src/dawn/native",
     ]
   }
+
+  if (is_fuchsia) {
+    sources += [
+      "display_embedder/output_presenter_fuchsia.cc",
+      "display_embedder/output_presenter_fuchsia.h",
+    ]
+  }
 }
 
 viz_source_set("unit_tests") {
@@ -524,6 +575,7 @@ viz_source_set("unit_tests") {
     "//components/viz/test:test_suite",
     "//components/viz/test:test_support",
     "//gpu/command_buffer/client",
+    "//gpu/command_buffer/client:gles2_implementation",
     "//gpu/ipc:gl_in_process_context",
     "//gpu/ipc/service",
     "//media",
diff --git components/viz/service/display/DEPS components/viz/service/display/DEPS
index 74bed60b8e188..25ad15d3de057 100644
--- components/viz/service/display/DEPS
+++ components/viz/service/display/DEPS
@@ -17,7 +17,7 @@ include_rules = [
   "+components/viz/service/display_embedder/overlay_candidate_validator_win.h",
   "+components/viz/service/display_embedder/skia_output_surface_dependency.h",
   "+components/viz/common",
-  "+gpu/command_buffer/client/shared_image_interface.h",
+  "+gpu/command_buffer/client",
   "+gpu/command_buffer/common",
   "+gpu/command_buffer/service",
   "+gpu/GLES2",
diff --git components/viz/service/display/display.cc components/viz/service/display/display.cc
index 4d20ad262181d..8b92ff5d7efc4 100644
--- components/viz/service/display/display.cc
+++ components/viz/service/display/display.cc
@@ -50,6 +50,8 @@
 #include "components/viz/service/display/surface_aggregator.h"
 #include "components/viz/service/surfaces/surface.h"
 #include "components/viz/service/surfaces/surface_manager.h"
+#include "gpu/command_buffer/client/context_support.h"
+#include "gpu/command_buffer/client/gles2_interface.h"
 #include "gpu/ipc/scheduler_sequence.h"
 #include "services/viz/public/mojom/compositing/compositor_frame_sink.mojom.h"
 #include "third_party/abseil-cpp/absl/types/optional.h"
diff --git components/viz/service/display/output_surface.cc components/viz/service/display/output_surface.cc
index 41496bce2138f..ccafd75cf741e 100644
--- components/viz/service/display/output_surface.cc
+++ components/viz/service/display/output_surface.cc
@@ -15,6 +15,8 @@
 #include "components/viz/service/display/output_surface_client.h"
 #include "components/viz/service/display/output_surface_frame.h"
 #include "gpu/GLES2/gl2extchromium.h"
+#include "gpu/command_buffer/client/context_support.h"
+#include "gpu/command_buffer/client/gles2_interface.h"
 #include "ui/gfx/geometry/rect.h"
 #include "ui/gfx/swap_result.h"
 
diff --git components/viz/service/display/renderer_pixeltest.cc components/viz/service/display/renderer_pixeltest.cc
index 15158b0cf0924..f4e9e470afd6b 100644
--- components/viz/service/display/renderer_pixeltest.cc
+++ components/viz/service/display/renderer_pixeltest.cc
@@ -45,6 +45,7 @@
 #include "components/viz/test/test_in_process_context_provider.h"
 #include "components/viz/test/test_shared_bitmap_manager.h"
 #include "components/viz/test/test_types.h"
+#include "gpu/command_buffer/client/gles2_interface.h"
 #include "gpu/command_buffer/client/shared_image_interface.h"
 #include "gpu/command_buffer/common/shared_image_usage.h"
 #include "media/base/video_frame.h"
@@ -63,6 +64,8 @@
 #include "ui/gfx/test/icc_profiles.h"
 #include "ui/gfx/video_types.h"
 
+using gpu::gles2::GLES2Interface;
+
 namespace viz {
 namespace {
 
diff --git components/viz/service/display/skia_renderer.cc components/viz/service/display/skia_renderer.cc
index daab404483b22..958d63dfb64d8 100644
--- components/viz/service/display/skia_renderer.cc
+++ components/viz/service/display/skia_renderer.cc
@@ -48,6 +48,7 @@
 #include "components/viz/service/display/renderer_utils.h"
 #include "components/viz/service/display/resource_fence.h"
 #include "components/viz/service/display/skia_output_surface.h"
+#include "gpu/command_buffer/client/gles2_interface.h"
 #include "gpu/command_buffer/client/shared_image_interface.h"
 #include "gpu/command_buffer/common/shared_image_usage.h"
 #include "gpu/command_buffer/common/sync_token.h"
diff --git components/viz/service/display_embedder/DEPS components/viz/service/display_embedder/DEPS
index c8b25c2843958..6f48eb9a6411f 100644
--- components/viz/service/display_embedder/DEPS
+++ components/viz/service/display_embedder/DEPS
@@ -19,9 +19,7 @@ include_rules = [
   "+components/viz/service/display/skia_output_surface.h",
   "+components/viz/service/display/software_output_device.h",
   "+components/viz/service/gl/gpu_service_impl.h",
-  "+gpu/command_buffer/client/gpu_memory_buffer_manager.h",
-  "+gpu/command_buffer/client/shared_image_interface.h",
-  "+gpu/command_buffer/client/shared_memory_limits.h",
+  "+gpu/command_buffer/client",
   "+gpu/command_buffer/common",
   "+gpu/command_buffer/service",
   "+gpu/config",
diff --git components/viz/service/gl/gpu_service_impl.cc components/viz/service/gl/gpu_service_impl.cc
index eedd5aaa15cb6..c60e7812c7e55 100644
--- components/viz/service/gl/gpu_service_impl.cc
+++ components/viz/service/gl/gpu_service_impl.cc
@@ -40,6 +40,7 @@
 #include "gpu/ipc/common/gpu_memory_buffer_support.h"
 #include "gpu/ipc/common/gpu_peak_memory.h"
 #include "gpu/ipc/common/memory_stats.h"
+#include "gpu/ipc/in_process_command_buffer.h"
 #include "gpu/ipc/service/gpu_channel.h"
 #include "gpu/ipc/service/gpu_channel_manager.h"
 #include "gpu/ipc/service/gpu_memory_buffer_factory.h"
diff --git components/viz/service/main/viz_compositor_thread_runner_impl.cc components/viz/service/main/viz_compositor_thread_runner_impl.cc
index 47a9fa511749f..49bdf227085fe 100644
--- components/viz/service/main/viz_compositor_thread_runner_impl.cc
+++ components/viz/service/main/viz_compositor_thread_runner_impl.cc
@@ -28,6 +28,7 @@
 #include "components/viz/service/performance_hint/hint_session.h"
 #include "gpu/config/gpu_finch_features.h"
 #include "gpu/config/gpu_switches.h"
+#include "gpu/ipc/command_buffer_task_executor.h"
 #include "gpu/ipc/scheduler_sequence.h"
 #include "gpu/ipc/service/gpu_memory_buffer_factory.h"
 #include "ui/gfx/switches.h"
diff --git content/browser/BUILD.gn content/browser/BUILD.gn
index 18328bedfdd0d..f2b10fa50ff3f 100644
--- content/browser/BUILD.gn
+++ content/browser/BUILD.gn
@@ -161,6 +161,7 @@ source_set("browser") {
     "//gpu/command_buffer/client:gles2_implementation",
     "//gpu/command_buffer/client:gles2_interface",
     "//gpu/command_buffer/client:raster_interface",
+    "//gpu/ipc:gl_in_process_context",
     "//gpu/ipc/host",
     "//gpu/vulkan:buildflags",
     "//media",
diff --git content/browser/gpu/browser_gpu_channel_host_factory.cc content/browser/gpu/browser_gpu_channel_host_factory.cc
index e82085f7d6d1d..eadceb7af12a4 100644
--- content/browser/gpu/browser_gpu_channel_host_factory.cc
+++ content/browser/gpu/browser_gpu_channel_host_factory.cc
@@ -34,6 +34,7 @@
 #include "content/public/common/content_switches.h"
 #include "gpu/ipc/common/gpu_client_ids.h"
 #include "gpu/ipc/common/gpu_watchdog_timeout.h"
+#include "gpu/ipc/in_process_command_buffer.h"
 #include "services/resource_coordinator/public/mojom/memory_instrumentation/constants.mojom.h"
 
 #if BUILDFLAG(IS_MAC)
diff --git content/browser/gpu/gpu_process_host.cc content/browser/gpu/gpu_process_host.cc
index f52718f68a21d..8a2b49938cb9e 100644
--- content/browser/gpu/gpu_process_host.cc
+++ content/browser/gpu/gpu_process_host.cc
@@ -70,6 +70,8 @@
 #include "gpu/ipc/common/gpu_client_ids.h"
 #include "gpu/ipc/common/result_codes.h"
 #include "gpu/ipc/host/gpu_disk_cache.h"
+#include "gpu/ipc/host/shader_disk_cache.h"
+#include "gpu/ipc/in_process_command_buffer.h"
 #include "media/base/media_switches.h"
 #include "media/media_buildflags.h"
 #include "mojo/public/cpp/bindings/generic_pending_receiver.h"
diff --git gpu/ipc/BUILD.gn gpu/ipc/BUILD.gn
index 16261432caef9..f1db962d6b323 100644
--- gpu/ipc/BUILD.gn
+++ gpu/ipc/BUILD.gn
@@ -31,6 +31,12 @@ component("gl_in_process_context") {
   deps = [
     "//base",
     "//base/third_party/dynamic_annotations",
+
+    # crbug.com/799267: crash_key needs to be added explicitly for Windows and
+    # Mac even though it's not directly referenced, because it's being
+    # implicitly depended upon by gpu/config/gpu_crash_keys.h but deps (even
+    # public ones) are not transitive for static libraries.
+    "//components/crash/core/common:crash_key",
     "//gpu/command_buffer/client",
     "//gpu/command_buffer/client:gles2_cmd_helper",
     "//gpu/command_buffer/client:gles2_implementation",
-- 
2.36.1.windows.1

